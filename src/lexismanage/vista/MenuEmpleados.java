/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package lexismanage.vista;

import java.awt.Color;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import lexismanage.Conexion;

/**
 *
 * @author alexi
 */
public class MenuEmpleados extends javax.swing.JPanel {

    /**
     * Creates new form usuarios
     */
    Conexion con = new Conexion();
    static String id_empleado;
    
    public MenuEmpleados() {
        initComponents();
        mostrarEmpleadosEnTabla();
    }

    public void mostrarDatosEmpleadoPorIdentificacion(String identificacion) {
    
    String sql = "SELECT e.identificacion AS ID, e.nombre AS Nombre, e.apellido AS Apellido, " +
                 "e.telefono AS Telefono, e.rol AS Rol, e.fecha_ingreso AS FechaIngreso " +
                 "FROM Empleados e " +
                 "WHERE e.identificacion = ?";  // Filtro por identificación
    
   
    Conexion conexion = new Conexion();
    Connection con = conexion.conectar();

    
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("ID");
    model.addColumn("Nombre");
    model.addColumn("Apellido");
    model.addColumn("Telefono");
    model.addColumn("Rol");
    model.addColumn("Fecha de Ingreso");

   
    TablaEmpleados.setModel(model);

    try (
            PreparedStatement pt = con.prepareStatement(sql)) {
        
        pt.setString(1, identificacion);
        
        // Ejecuta la consulta
        try (ResultSet rs = pt.executeQuery()) {
            // Limpia el modelo antes de agregar nuevos datos
            model.setRowCount(0);

            // Itera sobre los resultados de la consulta
            while (rs.next()) {
                Object[] fila = {
                    rs.getString("ID"),
                    rs.getString("Nombre"),
                    rs.getString("Apellido"),
                    rs.getString("Telefono"),
                    rs.getString("Rol"),
                    rs.getDate("FechaIngreso")
                };
                // Agrega la fila al modelo de la tabla
                model.addRow(fila);
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error al cargar los datos del empleado: " + e.getMessage());
    }
}
    public void mostrarEmpleadosEnTabla() {
    // Consulta SQL para obtener la información de los empleados
    String sql = "SELECT e.identificacion AS ID, e.nombre AS Nombre, e.apellido AS Apellido, " +
                 "e.telefono AS Telefono, e.rol AS Rol, e.fecha_ingreso AS FechaIngreso " +
                 "FROM Empleados e";
    

    Conexion conexion = new Conexion();
    Connection con = conexion.conectar();

    
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("ID");
    model.addColumn("Nombre");
    model.addColumn("Apellido");
    model.addColumn("Telefono");
    model.addColumn("Rol");
    model.addColumn("Fecha de Ingreso");

    // Asigna el modelo al JTable
    TablaEmpleados.setModel(model);

    try (PreparedStatement pt = con.prepareStatement(sql);
         ResultSet rs = pt.executeQuery()) {

       
        model.setRowCount(0);

        
        while (rs.next()) {
            Object[] fila = {
                rs.getString("ID"),
                rs.getString("Nombre"),
                rs.getString("Apellido"),
                rs.getString("Telefono"),
                rs.getString("Rol"),
                rs.getDate("FechaIngreso")
            };
           
            model.addRow(fila);
        }

    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error al cargar los datos: " + e.getMessage());
    }
}
    
 public void clearField(JTextField field, String placeholder) {
    if (field.getText().equals(placeholder)) {
        field.setText("");
        field.setForeground(Color.black);
    }
}

public void checkAndSetPlaceholder(JTextField field, String placeholder) {
    if (field.getText().isEmpty()) {
        field.setText(placeholder);
        field.setForeground(Color.gray);
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaEmpleados = new javax.swing.JTable();
        buscarempleado = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        IDCAMPOBUSCAR = new javax.swing.JTextField();
        Actualizarylimpiar = new javax.swing.JButton();
        agregarEmpleado = new javax.swing.JButton();
        EDITAREMPLEADO = new javax.swing.JButton();
        botoneliminar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        CAMPOIDEMPLEADO = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        NOMBREEMPLEADO = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        APELLIDOEMPLEADO = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        TELEMPLEADO = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        DIAINGRESOEMPLEADO = new com.toedter.calendar.JDateChooser();
        ROLEMPLEADO = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(10, 16, 30));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("LISTA DE EMPLEADOS");

        TablaEmpleados.setBackground(new java.awt.Color(10, 16, 30));
        TablaEmpleados.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        TablaEmpleados.setForeground(new java.awt.Color(255, 255, 255));
        TablaEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        TablaEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaEmpleadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaEmpleados);

        buscarempleado.setBackground(new java.awt.Color(255, 77, 88));
        buscarempleado.setFont(new java.awt.Font("Yu Gothic UI", 3, 18)); // NOI18N
        buscarempleado.setForeground(new java.awt.Color(242, 242, 242));
        buscarempleado.setText("Buscar");
        buscarempleado.setBorder(null);
        buscarempleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarempleadoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Buscar Empleado :");

        IDCAMPOBUSCAR.setBackground(new java.awt.Color(242, 242, 242));
        IDCAMPOBUSCAR.setFont(new java.awt.Font("Yu Gothic UI", 3, 14)); // NOI18N
        IDCAMPOBUSCAR.setForeground(new java.awt.Color(153, 153, 153));
        IDCAMPOBUSCAR.setText(" Ingrese ID Empleado");
        IDCAMPOBUSCAR.setToolTipText("");
        IDCAMPOBUSCAR.setBorder(null);
        IDCAMPOBUSCAR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                IDCAMPOBUSCARMousePressed(evt);
            }
        });
        IDCAMPOBUSCAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDCAMPOBUSCARActionPerformed(evt);
            }
        });

        Actualizarylimpiar.setFont(new java.awt.Font("Yu Gothic UI", 3, 18)); // NOI18N
        Actualizarylimpiar.setForeground(new java.awt.Color(255, 77, 88));
        Actualizarylimpiar.setText("Actualizar");
        Actualizarylimpiar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Actualizarylimpiar.setBorderPainted(false);
        Actualizarylimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarylimpiarActionPerformed(evt);
            }
        });

        agregarEmpleado.setBackground(new java.awt.Color(255, 77, 88));
        agregarEmpleado.setFont(new java.awt.Font("Yu Gothic UI", 3, 18)); // NOI18N
        agregarEmpleado.setForeground(new java.awt.Color(242, 242, 242));
        agregarEmpleado.setText(" Agregar Empleado");
        agregarEmpleado.setBorder(null);
        agregarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarEmpleadoActionPerformed(evt);
            }
        });

        EDITAREMPLEADO.setFont(new java.awt.Font("Yu Gothic UI", 3, 18)); // NOI18N
        EDITAREMPLEADO.setForeground(new java.awt.Color(255, 77, 88));
        EDITAREMPLEADO.setText("Editar Empleado");
        EDITAREMPLEADO.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        EDITAREMPLEADO.setBorderPainted(false);
        EDITAREMPLEADO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EDITAREMPLEADOActionPerformed(evt);
            }
        });

        botoneliminar.setBackground(new java.awt.Color(255, 77, 88));
        botoneliminar.setFont(new java.awt.Font("Yu Gothic UI", 3, 18)); // NOI18N
        botoneliminar.setForeground(new java.awt.Color(242, 242, 242));
        botoneliminar.setText(" Eliminar Empleado");
        botoneliminar.setBorder(null);
        botoneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoneliminarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 3, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("   ID :");

        CAMPOIDEMPLEADO.setBackground(new java.awt.Color(242, 242, 242));
        CAMPOIDEMPLEADO.setFont(new java.awt.Font("Yu Gothic UI", 3, 14)); // NOI18N
        CAMPOIDEMPLEADO.setForeground(new java.awt.Color(153, 153, 153));
        CAMPOIDEMPLEADO.setText(" Ingrese ID Empleado");
        CAMPOIDEMPLEADO.setToolTipText("");
        CAMPOIDEMPLEADO.setBorder(null);
        CAMPOIDEMPLEADO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                CAMPOIDEMPLEADOMousePressed(evt);
            }
        });
        CAMPOIDEMPLEADO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CAMPOIDEMPLEADOActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 3, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nombre :");

        NOMBREEMPLEADO.setBackground(new java.awt.Color(242, 242, 242));
        NOMBREEMPLEADO.setFont(new java.awt.Font("Yu Gothic UI", 3, 14)); // NOI18N
        NOMBREEMPLEADO.setForeground(new java.awt.Color(153, 153, 153));
        NOMBREEMPLEADO.setText(" Ingrese Nombre Empleado");
        NOMBREEMPLEADO.setToolTipText("");
        NOMBREEMPLEADO.setBorder(null);
        NOMBREEMPLEADO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                NOMBREEMPLEADOMousePressed(evt);
            }
        });
        NOMBREEMPLEADO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NOMBREEMPLEADOActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 3, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Apellido :");

        APELLIDOEMPLEADO.setBackground(new java.awt.Color(242, 242, 242));
        APELLIDOEMPLEADO.setFont(new java.awt.Font("Yu Gothic UI", 3, 14)); // NOI18N
        APELLIDOEMPLEADO.setForeground(new java.awt.Color(153, 153, 153));
        APELLIDOEMPLEADO.setText(" Ingrese Apellido Empleado");
        APELLIDOEMPLEADO.setToolTipText("");
        APELLIDOEMPLEADO.setBorder(null);
        APELLIDOEMPLEADO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                APELLIDOEMPLEADOMousePressed(evt);
            }
        });
        APELLIDOEMPLEADO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                APELLIDOEMPLEADOActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 3, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Fecha de Ingreso :");

        TELEMPLEADO.setBackground(new java.awt.Color(242, 242, 242));
        TELEMPLEADO.setFont(new java.awt.Font("Yu Gothic UI", 3, 14)); // NOI18N
        TELEMPLEADO.setForeground(new java.awt.Color(153, 153, 153));
        TELEMPLEADO.setText(" Ingrese Telefono Empleado");
        TELEMPLEADO.setToolTipText("");
        TELEMPLEADO.setBorder(null);
        TELEMPLEADO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TELEMPLEADOMousePressed(evt);
            }
        });
        TELEMPLEADO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TELEMPLEADOActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 3, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Telefono :");

        ROLEMPLEADO.setBackground(new java.awt.Color(242, 242, 242));
        ROLEMPLEADO.setFont(new java.awt.Font("Yu Gothic UI", 3, 14)); // NOI18N
        ROLEMPLEADO.setForeground(new java.awt.Color(153, 153, 153));
        ROLEMPLEADO.setText(" Ingrese Rol Empleado");
        ROLEMPLEADO.setToolTipText("");
        ROLEMPLEADO.setBorder(null);
        ROLEMPLEADO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ROLEMPLEADOMousePressed(evt);
            }
        });
        ROLEMPLEADO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ROLEMPLEADOActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 3, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Rol :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 812, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(CAMPOIDEMPLEADO, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(NOMBREEMPLEADO, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(APELLIDOEMPLEADO, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(EDITAREMPLEADO, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(botoneliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(TELEMPLEADO, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(agregarEmpleado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(DIAINGRESOEMPLEADO, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ROLEMPLEADO, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 38, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buscarempleado, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Actualizarylimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(IDCAMPOBUSCAR, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(IDCAMPOBUSCAR, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buscarempleado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Actualizarylimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                            .addComponent(CAMPOIDEMPLEADO))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(NOMBREEMPLEADO, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(APELLIDOEMPLEADO, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TELEMPLEADO, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ROLEMPLEADO, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DIAINGRESOEMPLEADO, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(agregarEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EDITAREMPLEADO, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botoneliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buscarempleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarempleadoActionPerformed
        // TODO add your handling code here:
        mostrarDatosEmpleadoPorIdentificacion(IDCAMPOBUSCAR.getText());
    }//GEN-LAST:event_buscarempleadoActionPerformed

    private void IDCAMPOBUSCARMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IDCAMPOBUSCARMousePressed
        // TODO add your handling code here:
        if(IDCAMPOBUSCAR.getText().equals(" Ingrese ID Empleado")){
            IDCAMPOBUSCAR.setText("");
            IDCAMPOBUSCAR.setForeground(Color.black);
        }
       
    }//GEN-LAST:event_IDCAMPOBUSCARMousePressed

    private void IDCAMPOBUSCARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDCAMPOBUSCARActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDCAMPOBUSCARActionPerformed

    private void ActualizarylimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarylimpiarActionPerformed
        // TODO add your handling code here:
        mostrarEmpleadosEnTabla();
          CAMPOIDEMPLEADO.setText(" Ingrese ID Empleado");
                CAMPOIDEMPLEADO.setForeground(Color.gray);
                NOMBREEMPLEADO.setText(" Ingrese Nombre Empleado");
                NOMBREEMPLEADO.setForeground(Color.gray);
                APELLIDOEMPLEADO.setText(" Ingrese Apellido Empleado");
                APELLIDOEMPLEADO.setForeground(Color.gray);
                TELEMPLEADO.setText(" Ingrese Telefono Empleado");
                TELEMPLEADO.setForeground(Color.gray);
                ROLEMPLEADO.setText(" Ingrese Rol Empleado");
                ROLEMPLEADO.setForeground(Color.gray);
                DIAINGRESOEMPLEADO.setDate(null);  // Limpiar el campo de fecha
                IDCAMPOBUSCAR.setText(" Ingrese ID Empleado");
                IDCAMPOBUSCAR.setForeground(Color.gray);
        
       
    }//GEN-LAST:event_ActualizarylimpiarActionPerformed

    private void agregarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarEmpleadoActionPerformed
        // TODO add your handling code here:
        
      String sql = "INSERT INTO Empleados (identificacion, nombre, apellido, telefono, rol, fecha_ingreso, id_admin) "
               + "VALUES (?, ?, ?, ?, ?, ?, ?)";

    // Validar que los campos no estén vacíos
    if (!CAMPOIDEMPLEADO.getText().isEmpty() && 
        !CAMPOIDEMPLEADO.getText().equals(" Ingrese ID Empleado") &&
        !NOMBREEMPLEADO.getText().isEmpty() && 
        !NOMBREEMPLEADO.getText().equals(" Ingrese Nombre Empleado") &&
        !APELLIDOEMPLEADO.getText().isEmpty() && 
        !APELLIDOEMPLEADO.getText().equals(" Ingrese Apellido Empleado") &&
        !TELEMPLEADO.getText().isEmpty() && 
        !TELEMPLEADO.getText().equals(" Ingrese Telefono Empleado") &&
        !ROLEMPLEADO.getText().isEmpty() && 
        !ROLEMPLEADO.getText().equals(" Ingrese Rol Empleado") &&
        DIAINGRESOEMPLEADO.getDate() != null) { 

        Connection conexion = con.conectar();
        try {
            PreparedStatement pt = conexion.prepareStatement(sql);
            pt.setString(1, CAMPOIDEMPLEADO.getText());
            pt.setString(2, NOMBREEMPLEADO.getText());
            pt.setString(3, APELLIDOEMPLEADO.getText());
            pt.setString(4, TELEMPLEADO.getText());
            pt.setString(5, ROLEMPLEADO.getText());
            
       
            java.util.Date fecha = DIAINGRESOEMPLEADO.getDate();
            java.sql.Date fechaSQL = new java.sql.Date(fecha.getTime());
            pt.setDate(6, fechaSQL);
            
            
            pt.setInt(7, lexismanage.LexisManage.idUsuario); 


            int rs = pt.executeUpdate();

            if (rs > 0) {
                JOptionPane.showMessageDialog(null, "Empleado agregado correctamente");

                // Reiniciar los campos de texto con el texto y color por defecto
                CAMPOIDEMPLEADO.setText(" Ingrese ID Empleado");
                CAMPOIDEMPLEADO.setForeground(Color.gray);
                NOMBREEMPLEADO.setText(" Ingrese Nombre Empleado");
                NOMBREEMPLEADO.setForeground(Color.gray);
                APELLIDOEMPLEADO.setText(" Ingrese Apellido Empleado");
                APELLIDOEMPLEADO.setForeground(Color.gray);
                TELEMPLEADO.setText(" Ingrese Telefono Empleado");
                TELEMPLEADO.setForeground(Color.gray);
                ROLEMPLEADO.setText(" Ingrese Rol Empleado");
                ROLEMPLEADO.setForeground(Color.gray);
                DIAINGRESOEMPLEADO.setDate(null);  
                 IDCAMPOBUSCAR.setText(" Ingrese ID Empleado");
                IDCAMPOBUSCAR.setForeground(Color.gray);
                
                conexion.close();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al agregar el empleado: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(null, "Rellena todos los campos correctamente");
    }
    }//GEN-LAST:event_agregarEmpleadoActionPerformed

    private void EDITAREMPLEADOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EDITAREMPLEADOActionPerformed
        // TODO add your handling code here:
        String sql = "UPDATE Empleados SET nombre = ?, apellido = ?, telefono = ?, rol = ?  WHERE  identificacion = ?";
    Connection con = Conexion.conectar();

    // Asegúrate de tener el ID del empleado para la actualización
    if (!CAMPOIDEMPLEADO.getText().trim().isEmpty()) {
        try {
            // Verificar que los campos no estén vacíos
            if (NOMBREEMPLEADO.getText().trim().isEmpty() || NOMBREEMPLEADO.getText().equals(" Ingrese Nombre Empleado")) {
                JOptionPane.showMessageDialog(null, "El campo Nombre es obligatorio.");
                return;
            }

            if (APELLIDOEMPLEADO.getText().trim().isEmpty() || APELLIDOEMPLEADO.getText().equals(" Ingrese Apellido Empleado")) {
                JOptionPane.showMessageDialog(null, "El campo Apellido es obligatorio.");
                return;
            }

            if (TELEMPLEADO.getText().trim().isEmpty() || TELEMPLEADO.getText().equals(" Ingrese Telefono Empleado")) {
                JOptionPane.showMessageDialog(null, "El campo Teléfono es obligatorio.");
                return;
            }

            if (ROLEMPLEADO.getText().trim().isEmpty() || ROLEMPLEADO.getText().equals(" Ingrese Rol Empleado")) {
                JOptionPane.showMessageDialog(null, "El campo Rol es obligatorio.");
                return;
            }

           

           
            // Preparar la consulta SQL con los nuevos valores
            PreparedStatement pt = con.prepareStatement(sql);
            pt.setString(1, NOMBREEMPLEADO.getText());         
            pt.setString(2, APELLIDOEMPLEADO.getText());        
            pt.setString(3, TELEMPLEADO.getText());             
            pt.setString(4, ROLEMPLEADO.getText());             
       
            pt.setString(5, CAMPOIDEMPLEADO.getText());

            // Ejecutar la consulta y verificar si se realizó la actualización
            int fila = pt.executeUpdate();

            if (fila > 0) {
                JOptionPane.showMessageDialog(null, "Empleado " + NOMBREEMPLEADO.getText() + " actualizado correctamente!");

                // Restablecer los campos después de la actualización
                NOMBREEMPLEADO.setText(" Ingrese Nombre Empleado");
                APELLIDOEMPLEADO.setText(" Ingrese Apellido Empleado");
                TELEMPLEADO.setText(" Ingrese Telefono Empleado");
                ROLEMPLEADO.setText(" Ingrese Rol Empleado");
                DIAINGRESOEMPLEADO.setDate(null); // Limpiar el campo de fecha
                CAMPOIDEMPLEADO.setText(" Ingrese ID Empleado");
                
                // Cambiar el color del texto de los campos
                NOMBREEMPLEADO.setForeground(Color.gray);
                APELLIDOEMPLEADO.setForeground(Color.gray);
                TELEMPLEADO.setForeground(Color.gray);
                ROLEMPLEADO.setForeground(Color.gray);
                CAMPOIDEMPLEADO.setForeground(Color.gray);
                con.close();
            } else {
                JOptionPane.showMessageDialog(null, "No se encontró el empleado, asegúrate de que el ID sea correcto.");
            }

          } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al actualizar los datos: " + e.getMessage());
            System.out.println("Error: " + e);
        
           } 
     }else {
        JOptionPane.showMessageDialog(null, "El campo ID Empleado es obligatorio.");
    }
    

    }//GEN-LAST:event_EDITAREMPLEADOActionPerformed

    private void botoneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoneliminarActionPerformed
        // TODO add your handling code here:
       String queryDelete = "DELETE FROM Empleados WHERE identificacion = ?";
    
    Connection con = Conexion.conectar();
    
    // Obtener el ID del empleado desde el campo de texto
    String id_empleado = CAMPOIDEMPLEADO.getText().trim(); // Asegúrate de obtener el ID del campo

    // Verificar que hay un ID de empleado válido
    if (!id_empleado.isEmpty()) { 
        try {
            PreparedStatement pt = con.prepareStatement(queryDelete);
            pt.setString(1, id_empleado); 
            int rs = pt.executeUpdate(); 
            
            if (rs > 0) { // Si se eliminó correctamente
                JOptionPane.showMessageDialog(null, "Empleado Eliminado Correctamente");

                // Restablecer los campos de texto
                CAMPOIDEMPLEADO.setText(" Ingrese ID Empleado");
                NOMBREEMPLEADO.setText(" Ingrese Nombre Empleado");
                APELLIDOEMPLEADO.setText(" Ingrese Apellido Empleado");
                TELEMPLEADO.setText(" Ingrese Telefono Empleado");
                ROLEMPLEADO.setText(" Ingrese Rol Empleado");
                DIAINGRESOEMPLEADO.setDate(null); // Limpiar el campo de fecha

                CAMPOIDEMPLEADO.setForeground(Color.gray);
                NOMBREEMPLEADO.setForeground(Color.gray);
                APELLIDOEMPLEADO.setForeground(Color.gray);
                TELEMPLEADO.setForeground(Color.gray);
                ROLEMPLEADO.setForeground(Color.gray);

                // Limpiar el ID empleado
                id_empleado = ""; 
                con.close();
            } else {
                JOptionPane.showMessageDialog(null, "No se encontró el empleado con el ID proporcionado.");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al eliminar el empleado: " + e.getMessage()); 
            System.out.println("SQLState: " + e.getSQLState());
            System.out.println("Error Code: " + e.getErrorCode());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage()); 
        }
    } else {
        JOptionPane.showMessageDialog(null, "Por favor, ingresa un ID de empleado válido!");
    }

    }//GEN-LAST:event_botoneliminarActionPerformed

    private void CAMPOIDEMPLEADOMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CAMPOIDEMPLEADOMousePressed
        // TODO add your handling code here:
          clearField(CAMPOIDEMPLEADO, " Ingrese ID Empleado");
    checkAndSetPlaceholder(NOMBREEMPLEADO, " Ingrese Nombre Empleado");
    checkAndSetPlaceholder(APELLIDOEMPLEADO, " Ingrese Apellido Empleado");
    checkAndSetPlaceholder(TELEMPLEADO, " Ingrese Telefono Empleado");
    checkAndSetPlaceholder(ROLEMPLEADO, " Ingrese Rol Empleado");
    DIAINGRESOEMPLEADO.setDate(null);
    }//GEN-LAST:event_CAMPOIDEMPLEADOMousePressed

    private void CAMPOIDEMPLEADOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CAMPOIDEMPLEADOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CAMPOIDEMPLEADOActionPerformed

    private void NOMBREEMPLEADOMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NOMBREEMPLEADOMousePressed
        // TODO add your handling code here:
         clearField(NOMBREEMPLEADO, " Ingrese Nombre Empleado");
    checkAndSetPlaceholder(CAMPOIDEMPLEADO, " Ingrese ID Empleado");
    checkAndSetPlaceholder(APELLIDOEMPLEADO, " Ingrese Apellido Empleado");
    checkAndSetPlaceholder(TELEMPLEADO, " Ingrese Telefono Empleado");
    checkAndSetPlaceholder(ROLEMPLEADO, " Ingrese Rol Empleado");
    }//GEN-LAST:event_NOMBREEMPLEADOMousePressed

    private void NOMBREEMPLEADOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NOMBREEMPLEADOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NOMBREEMPLEADOActionPerformed

    private void APELLIDOEMPLEADOMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_APELLIDOEMPLEADOMousePressed
        // TODO add your handling code here:
        clearField(APELLIDOEMPLEADO, " Ingrese Apellido Empleado");
    checkAndSetPlaceholder(CAMPOIDEMPLEADO, " Ingrese ID Empleado");
    checkAndSetPlaceholder(NOMBREEMPLEADO, " Ingrese Nombre Empleado");
    checkAndSetPlaceholder(TELEMPLEADO, " Ingrese Telefono Empleado");
    checkAndSetPlaceholder(ROLEMPLEADO, " Ingrese Rol Empleado");
    }//GEN-LAST:event_APELLIDOEMPLEADOMousePressed

    private void APELLIDOEMPLEADOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_APELLIDOEMPLEADOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_APELLIDOEMPLEADOActionPerformed

    private void TELEMPLEADOMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TELEMPLEADOMousePressed
        // TODO add your handling code here:
        clearField(TELEMPLEADO, " Ingrese Telefono Empleado");
    checkAndSetPlaceholder(CAMPOIDEMPLEADO, " Ingrese ID Empleado");
    checkAndSetPlaceholder(NOMBREEMPLEADO, " Ingrese Nombre Empleado");
    checkAndSetPlaceholder(APELLIDOEMPLEADO, " Ingrese Apellido Empleado");
    checkAndSetPlaceholder(ROLEMPLEADO, " Ingrese Rol Empleado");
    }//GEN-LAST:event_TELEMPLEADOMousePressed

    private void TELEMPLEADOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TELEMPLEADOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TELEMPLEADOActionPerformed

    private void ROLEMPLEADOMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ROLEMPLEADOMousePressed
        // TODO add your handling code here:
        clearField(ROLEMPLEADO, " Ingrese Rol Empleado");
    checkAndSetPlaceholder(CAMPOIDEMPLEADO, " Ingrese ID Empleado");
    checkAndSetPlaceholder(NOMBREEMPLEADO, " Ingrese Nombre Empleado");
    checkAndSetPlaceholder(APELLIDOEMPLEADO, " Ingrese Apellido Empleado");
    checkAndSetPlaceholder(TELEMPLEADO, " Ingrese Telefono Empleado");
    }//GEN-LAST:event_ROLEMPLEADOMousePressed

    private void ROLEMPLEADOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ROLEMPLEADOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ROLEMPLEADOActionPerformed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        checkAndSetPlaceholder(IDCAMPOBUSCAR," Ingrese ID Empleado");
    }//GEN-LAST:event_formMousePressed

    private void TablaEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaEmpleadosMouseClicked
        // TODO add your handling code here:
        int seleccion = TablaEmpleados.rowAtPoint(evt.getPoint()); // Obtener la fila seleccionada


 
    

    CAMPOIDEMPLEADO.setText(String.valueOf(TablaEmpleados.getValueAt(seleccion, 0)));
    NOMBREEMPLEADO.setText(String.valueOf(TablaEmpleados.getValueAt(seleccion, 1).toString())); 
    APELLIDOEMPLEADO.setText(String.valueOf(TablaEmpleados.getValueAt(seleccion, 2).toString())); 
    TELEMPLEADO.setText(String.valueOf(TablaEmpleados.getValueAt(seleccion, 3).toString())); 
    ROLEMPLEADO.setText(String.valueOf(TablaEmpleados.getValueAt(seleccion, 4).toString())); 
    DIAINGRESOEMPLEADO.setDate((java.util.Date) TablaEmpleados.getValueAt(seleccion, 5)); 
    
    id_empleado=CAMPOIDEMPLEADO.getText().trim();

    // Cambiar el color del texto de los campos a negro
    CAMPOIDEMPLEADO.setForeground(Color.black);
    NOMBREEMPLEADO.setForeground(Color.black);
    APELLIDOEMPLEADO.setForeground(Color.black);
    TELEMPLEADO.setForeground(Color.black);
    ROLEMPLEADO.setForeground(Color.black);

    }//GEN-LAST:event_TablaEmpleadosMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField APELLIDOEMPLEADO;
    private javax.swing.JButton Actualizarylimpiar;
    private javax.swing.JTextField CAMPOIDEMPLEADO;
    private com.toedter.calendar.JDateChooser DIAINGRESOEMPLEADO;
    private javax.swing.JButton EDITAREMPLEADO;
    private javax.swing.JTextField IDCAMPOBUSCAR;
    private javax.swing.JTextField NOMBREEMPLEADO;
    private javax.swing.JTextField ROLEMPLEADO;
    private javax.swing.JTextField TELEMPLEADO;
    private javax.swing.JTable TablaEmpleados;
    private javax.swing.JButton agregarEmpleado;
    private javax.swing.JButton botoneliminar;
    private javax.swing.JButton buscarempleado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
