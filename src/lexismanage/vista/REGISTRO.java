/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lexismanage.vista;

import java.awt.Color;
import java.sql.Connection;
import java.sql.*;
import java.sql.Statement;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import lexismanage.Conexion;

/**
 *
 * @author alexi
 */
public class REGISTRO extends javax.swing.JFrame {

    /**
     * Creates new form LOGIN
     */
    public REGISTRO() {
        initComponents();
         Conexion conexion= new Conexion();
        Conexion.conectar();
        mostrarcomboPregunta("Preguntas_Seguridad", "pregunta", jComboBox1);
    }
   public int obtenerId(String campoobtener,String tabla,String campoguia,String valor) {
    String sql = "SELECT " + campoobtener + " FROM " + tabla + " WHERE " + campoguia + " = ?";

    int idObtenido = -1;
    
    Conexion conexion = new Conexion();
    Connection con = conexion.conectar();
    
    try {
        PreparedStatement ps = con.prepareStatement(sql);
        ps.setString(1, valor);
        ResultSet rs = ps.executeQuery();
        
        if (rs.next()) {
            idObtenido = rs.getInt(campoobtener);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error al obtener ID : " + e);
    }
    
    return idObtenido;
}

    
    public void mostrarcomboPregunta(String tabla,String campo,JComboBox<String> comboBox){
       String sql = "select * from "+tabla;
        
        
        Conexion conexion= new Conexion();
        Connection con =conexion.conectar();
        
        
        try {
         PreparedStatement pt= con.prepareStatement(sql);
         
          ResultSet rs = pt.executeQuery(sql);
          while(rs.next()){
           comboBox.addItem(rs.getString(campo));
          }
            
        } catch (Exception e) {
        }          
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        SalirMenu = new javax.swing.JLabel();
        passwordregister = new javax.swing.JLabel();
        usuarioregister = new javax.swing.JLabel();
        respuestacampo = new javax.swing.JTextField();
        crearUsuario = new javax.swing.JButton();
        conpassregister = new javax.swing.JLabel();
        confirmarpascampo = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        respaldo = new javax.swing.JLabel();
        respaldo1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        respuesta = new javax.swing.JLabel();
        passwordregistercampo1 = new javax.swing.JPasswordField();
        usuarioregistercampo1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(10, 16, 30));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(10, 16, 30));
        jPanel1.setForeground(new java.awt.Color(10, 16, 30));

        jPanel2.setBackground(new java.awt.Color(26, 39, 55));

        jLabel5.setFont(new java.awt.Font("FRISTA", 3, 14)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lexismanage/images/LM100.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBackground(new java.awt.Color(26, 39, 55));

        SalirMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lexismanage/images/cancelarcancelar.png"))); // NOI18N
        SalirMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SalirMenuMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(772, Short.MAX_VALUE)
                .addComponent(SalirMenu)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(SalirMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        passwordregister.setFont(new java.awt.Font("Yu Gothic UI", 3, 24)); // NOI18N
        passwordregister.setForeground(new java.awt.Color(255, 255, 255));
        passwordregister.setText("Contraseña :");

        usuarioregister.setFont(new java.awt.Font("Yu Gothic UI", 3, 24)); // NOI18N
        usuarioregister.setForeground(new java.awt.Color(255, 255, 255));
        usuarioregister.setText("Usuario :");

        respuestacampo.setBackground(new java.awt.Color(242, 242, 242));
        respuestacampo.setFont(new java.awt.Font("Yu Gothic UI", 3, 14)); // NOI18N
        respuestacampo.setForeground(new java.awt.Color(153, 153, 153));
        respuestacampo.setText("Ingrese Su Respuesta");
        respuestacampo.setBorder(null);
        respuestacampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                respuestacampoMousePressed(evt);
            }
        });
        respuestacampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                respuestacampoActionPerformed(evt);
            }
        });

        crearUsuario.setBackground(new java.awt.Color(255, 77, 88));
        crearUsuario.setFont(new java.awt.Font("Yu Gothic UI", 3, 18)); // NOI18N
        crearUsuario.setForeground(new java.awt.Color(242, 242, 242));
        crearUsuario.setText("Crear Usuario");
        crearUsuario.setBorder(null);
        crearUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearUsuarioActionPerformed(evt);
            }
        });

        conpassregister.setFont(new java.awt.Font("Yu Gothic UI", 3, 24)); // NOI18N
        conpassregister.setForeground(new java.awt.Color(255, 255, 255));
        conpassregister.setText("Confirmar Contraseña :");

        confirmarpascampo.setBackground(new java.awt.Color(242, 242, 242));
        confirmarpascampo.setFont(new java.awt.Font("Yu Gothic UI", 3, 14)); // NOI18N
        confirmarpascampo.setForeground(new java.awt.Color(153, 153, 153));
        confirmarpascampo.setText("*****");
        confirmarpascampo.setBorder(null);
        confirmarpascampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                confirmarpascampoMousePressed(evt);
            }
        });
        confirmarpascampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarpascampoActionPerformed(evt);
            }
        });

        respaldo.setFont(new java.awt.Font("Yu Gothic UI", 3, 24)); // NOI18N
        respaldo.setForeground(new java.awt.Color(255, 255, 255));
        respaldo.setText("Respaldo");

        respaldo1.setFont(new java.awt.Font("Yu Gothic UI", 3, 24)); // NOI18N
        respaldo1.setForeground(new java.awt.Color(255, 255, 255));
        respaldo1.setText("Pregunta de seguridad:");

        jComboBox1.setFont(new java.awt.Font("Yu Gothic UI", 3, 14)); // NOI18N
        jComboBox1.setBorder(null);

        respuesta.setFont(new java.awt.Font("Yu Gothic UI", 3, 24)); // NOI18N
        respuesta.setForeground(new java.awt.Color(255, 255, 255));
        respuesta.setText("Respuesta :");

        passwordregistercampo1.setBackground(new java.awt.Color(242, 242, 242));
        passwordregistercampo1.setFont(new java.awt.Font("Yu Gothic UI", 3, 14)); // NOI18N
        passwordregistercampo1.setForeground(new java.awt.Color(153, 153, 153));
        passwordregistercampo1.setText("*****");
        passwordregistercampo1.setBorder(null);
        passwordregistercampo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                passwordregistercampo1MousePressed(evt);
            }
        });
        passwordregistercampo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordregistercampo1ActionPerformed(evt);
            }
        });

        usuarioregistercampo1.setBackground(new java.awt.Color(242, 242, 242));
        usuarioregistercampo1.setFont(new java.awt.Font("Yu Gothic UI", 3, 14)); // NOI18N
        usuarioregistercampo1.setForeground(new java.awt.Color(153, 153, 153));
        usuarioregistercampo1.setText(" ingrese nombre de usuario");
        usuarioregistercampo1.setBorder(null);
        usuarioregistercampo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                usuarioregistercampo1MousePressed(evt);
            }
        });
        usuarioregistercampo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarioregistercampo1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(crearUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(337, 337, 337))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(395, 395, 395)
                        .addComponent(jLabel1))
                    .addComponent(usuarioregister, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordregistercampo1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordregister, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(conpassregister, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usuarioregistercampo1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirmarpascampo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(respaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(respaldo1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(respuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(respuestacampo, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, 259, Short.MAX_VALUE)))))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(usuarioregister, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(respaldo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(usuarioregistercampo1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(passwordregister))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(respaldo1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(respuesta)
                        .addGap(18, 18, 18)
                        .addComponent(respuestacampo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                        .addComponent(crearUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(passwordregistercampo1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(conpassregister)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(confirmarpascampo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void respuestacampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_respuestacampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_respuestacampoActionPerformed

    private void crearUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearUsuarioActionPerformed
        // TODO add your handling code here:
  // TODO add your handling code here:
    String userReg = usuarioregistercampo1.getText();
    String passreg = new String(passwordregistercampo1.getPassword());
    String conpassreg = new String(confirmarpascampo.getPassword());
    
    if (!userReg.isEmpty() && !passreg.isEmpty() && !conpassreg.isEmpty() && passreg.equals(conpassreg)) {
        
        Connection con = Conexion.conectar();
        String select = (String) jComboBox1.getSelectedItem();
        
        String query1 = "INSERT INTO USUARIO_ADMIN (nombre_usuario, contrasena) VALUES (?, ?)";
        String query2 = "SELECT LAST_INSERT_ID()";

        try {
            // Insertar el nuevo usuario
            PreparedStatement insert = con.prepareStatement(query1);
            insert.setString(1, userReg);
            insert.setString(2, passreg);
            insert.executeUpdate();
            
            // Obtener el ID del usuario recién creado
            PreparedStatement lastIdQuery = con.prepareStatement(query2);
            ResultSet rs = lastIdQuery.executeQuery();
            int idUsuario = -1;
            if (rs.next()) {
                idUsuario = rs.getInt(1);
                System.out.println(idUsuario);            }

            // Verificar si se obtuvo el ID del usuario
            if (idUsuario != -1) {
                System.out.println("Usuario agregado");
                String campoobtenerpre = "id_pregunta";
                String tablapre = "Preguntas_Seguridad";
                String campoguiapre = "pregunta";
                
                int idpregunta = obtenerId(campoobtenerpre, tablapre, campoguiapre, select);
                
                // Insertar la respuesta de seguridad
                String query3 = "INSERT INTO Seguridad_UsuariosAdmin (id_usuario, id_pregunta, respuesta_seguridad) VALUES (?, ?, ?)";
                PreparedStatement insertSeguridad = con.prepareStatement(query3);
                insertSeguridad.setInt(1, idUsuario);
                insertSeguridad.setInt(2, idpregunta);
                insertSeguridad.setString(3, respuestacampo.getText()); // Asumiendo que tienes un campo para la respuesta de seguridad
                int filasinsertadas = insertSeguridad.executeUpdate();
                
                // Verificar si la respuesta de seguridad se insertó correctamente
                if (filasinsertadas > 0) {
                    JOptionPane.showMessageDialog(null, "Usuario correctamente registrado");
                    // Cerrar el frame actual
                    this.dispose();
                    
                    // Abrir la ventana de login
                    LOGIN login = new LOGIN();
                    login.setVisible(true);
                    login.setLocationRelativeTo(null);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al crear el usuario: " + e);
        }
    } else {
        JOptionPane.showMessageDialog(null, "Las contraseñas no coinciden");
    }
    }//GEN-LAST:event_crearUsuarioActionPerformed

    private void passwordregistercampo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordregistercampo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordregistercampo1ActionPerformed

    private void SalirMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalirMenuMouseClicked
        // TODO add your handling code here:
         dispose();
       
       LOGIN login = new LOGIN();
        
        login.setVisible(true);
        login.setLocationRelativeTo(null);
    }//GEN-LAST:event_SalirMenuMouseClicked

    private void usuarioregistercampo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarioregistercampo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usuarioregistercampo1ActionPerformed

    private void usuarioregistercampo1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usuarioregistercampo1MousePressed
        // TODO add your handling code here:
        if( usuarioregistercampo1.getText().equals(" ingrese nombre de usuario")){
         usuarioregistercampo1.setText("");
        usuarioregistercampo1.setForeground(Color.black);
        }
        if(String.valueOf( passwordregistercampo1.getPassword()).isEmpty()){
        passwordregistercampo1.setText("*****");
        passwordregistercampo1.setForeground(Color.gray);
        }
        if(String.valueOf( confirmarpascampo.getPassword()).isEmpty()){
        confirmarpascampo.setText("*****");
        confirmarpascampo.setForeground(Color.gray);
        }
        
        if(respuestacampo.getText().isEmpty()){
            respuestacampo.setText("Ingrese Su Respuesta");
           respuestacampo.setForeground(Color.gray);
        }
        
    }//GEN-LAST:event_usuarioregistercampo1MousePressed

    private void confirmarpascampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarpascampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmarpascampoActionPerformed

    private void passwordregistercampo1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordregistercampo1MousePressed
        // TODO add your handling code here:
        if(String.valueOf( passwordregistercampo1.getPassword()).equals("*****")){
        passwordregistercampo1.setText("");
        passwordregistercampo1.setForeground(Color.black);
        }
        if(usuarioregistercampo1.getText().isEmpty()){
            usuarioregistercampo1.setText(" ingrese nombre de usuario");
            usuarioregistercampo1.setForeground(Color.gray);
        }
        if(String.valueOf(confirmarpascampo.getPassword()).isEmpty()){
            confirmarpascampo.setText("*****");
            confirmarpascampo.setForeground(Color.gray);
        }
        if(respuestacampo.getText().isEmpty()){
            respuestacampo.setText("Ingrese Su Respuesta");
           respuestacampo.setForeground(Color.gray);
        }
        
    }//GEN-LAST:event_passwordregistercampo1MousePressed

    private void confirmarpascampoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmarpascampoMousePressed
        // TODO add your handling code here:
         if(String.valueOf( confirmarpascampo.getPassword()).equals("*****")){
        confirmarpascampo.setText("");
        confirmarpascampo.setForeground(Color.black);
        }
         
        if(usuarioregistercampo1.getText().isEmpty()){
            usuarioregistercampo1.setText(" ingrese nombre de usuario");
            usuarioregistercampo1.setForeground(Color.gray);
        }
        
        if(String.valueOf( passwordregistercampo1.getPassword()).isEmpty()){
        passwordregistercampo1.setText("*****");
        passwordregistercampo1.setForeground(Color.gray);
        }
        
        if(respuestacampo.getText().isEmpty()){
            respuestacampo.setText("Ingrese Su Respuesta");
           respuestacampo.setForeground(Color.gray);
        }
    }//GEN-LAST:event_confirmarpascampoMousePressed

    private void respuestacampoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_respuestacampoMousePressed
        // TODO add your handling code here:
        if(respuestacampo.getText().equals("Ingrese Su Respuesta")){
            respuestacampo.setText("");
            respuestacampo.setForeground(Color.black);
        }
        
        if(usuarioregistercampo1.getText().isEmpty()){
            usuarioregistercampo1.setText(" ingrese nombre de usuario");
            usuarioregistercampo1.setForeground(Color.gray);
        }
        
        if(String.valueOf( passwordregistercampo1.getPassword()).isEmpty()){
        passwordregistercampo1.setText("*****");
        passwordregistercampo1.setForeground(Color.gray);
        }
        
        if(String.valueOf(confirmarpascampo.getPassword()).isEmpty()){
            confirmarpascampo.setText("*****");
            confirmarpascampo.setForeground(Color.gray);
        }
    }//GEN-LAST:event_respuestacampoMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new REGISTRO().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel SalirMenu;
    private javax.swing.JPasswordField confirmarpascampo;
    private javax.swing.JLabel conpassregister;
    private javax.swing.JButton crearUsuario;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel passwordregister;
    private javax.swing.JPasswordField passwordregistercampo1;
    private javax.swing.JLabel respaldo;
    private javax.swing.JLabel respaldo1;
    private javax.swing.JLabel respuesta;
    private javax.swing.JTextField respuestacampo;
    private javax.swing.JLabel usuarioregister;
    private javax.swing.JTextField usuarioregistercampo1;
    // End of variables declaration//GEN-END:variables
}
