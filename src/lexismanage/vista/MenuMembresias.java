/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package lexismanage.vista;

import java.awt.Color;
import java.math.BigDecimal;
import java.math.RoundingMode;
import lexismanage.Conexion;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alexi
 */
public class MenuMembresias extends javax.swing.JPanel {

    /**
     * Creates new form usuarios
     */
    static int id_membresia;
   
    public MenuMembresias() {
        initComponents();
        Conexion con=new Conexion();
        con.conectar();
        mostrarTabla("Membresia");
        
        
        
    }

    public void mostrarTabla(String tabla){
        String sql = "select * from "+tabla;
        Statement st;
        
        Conexion conexion= new Conexion();
        Connection con =conexion.conectar();
        
        DefaultTableModel model = new  DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("NOMBRE");
        model.addColumn("DURACION (DIAS)");
        model.addColumn("INFORMACION");
        model.addColumn("COSTO (COP)");
        tablamembresias.setModel(model);
        
        
        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
            int id = rs.getInt("id_membresia"); 
            
            String nombre = rs.getString("nombre");
            int duracion = rs.getInt("duracion"); 
            String informacion = rs.getString("informacion");
            BigDecimal costo = rs.getBigDecimal("costo");
            
           
            String Costotext= costo.setScale(0,RoundingMode.DOWN).toString();
            
             model.addRow(new Object[]{
                id, 
                nombre, 
                duracion, 
                informacion, 
                Costotext 
            });
                
            }
           
        
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"error"+e);
        }
    }
    
   
             

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablamembresias = new javax.swing.JTable();
        Actualizartabla = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        Agregarmembresia = new javax.swing.JButton();
        editarmembresia = new javax.swing.JButton();
        eliminarmembresia = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        Nombremembresia = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        duracioncampo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        informacioncampo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        costocampo = new javax.swing.JTextField();

        setBackground(new java.awt.Color(10, 16, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("LISTA DE MEMBRESIAS");

        tablamembresias.setBackground(new java.awt.Color(10, 16, 30));
        tablamembresias.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tablamembresias.setForeground(new java.awt.Color(255, 255, 255));
        tablamembresias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablamembresias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablamembresiasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablamembresias);

        Actualizartabla.setFont(new java.awt.Font("Yu Gothic UI", 3, 18)); // NOI18N
        Actualizartabla.setForeground(new java.awt.Color(255, 77, 88));
        Actualizartabla.setText("Actualizar & Limpiar");
        Actualizartabla.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Actualizartabla.setBorderPainted(false);
        Actualizartabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizartablaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 3, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Gestion Membresias");

        Agregarmembresia.setBackground(new java.awt.Color(255, 77, 88));
        Agregarmembresia.setFont(new java.awt.Font("Yu Gothic UI", 3, 18)); // NOI18N
        Agregarmembresia.setForeground(new java.awt.Color(242, 242, 242));
        Agregarmembresia.setText(" Agregar Membresia");
        Agregarmembresia.setBorder(null);
        Agregarmembresia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarmembresiaActionPerformed(evt);
            }
        });

        editarmembresia.setFont(new java.awt.Font("Yu Gothic UI", 3, 18)); // NOI18N
        editarmembresia.setForeground(new java.awt.Color(255, 77, 88));
        editarmembresia.setText("Editar Membresia");
        editarmembresia.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        editarmembresia.setBorderPainted(false);
        editarmembresia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarmembresiaActionPerformed(evt);
            }
        });

        eliminarmembresia.setBackground(new java.awt.Color(255, 77, 88));
        eliminarmembresia.setFont(new java.awt.Font("Yu Gothic UI", 3, 18)); // NOI18N
        eliminarmembresia.setForeground(new java.awt.Color(242, 242, 242));
        eliminarmembresia.setText(" Eliminar Membresia");
        eliminarmembresia.setBorder(null);
        eliminarmembresia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarmembresiaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 3, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nombre :");

        Nombremembresia.setBackground(new java.awt.Color(242, 242, 242));
        Nombremembresia.setFont(new java.awt.Font("Yu Gothic UI", 3, 14)); // NOI18N
        Nombremembresia.setForeground(new java.awt.Color(153, 153, 153));
        Nombremembresia.setText(" Ingrese Nombre Membresia");
        Nombremembresia.setToolTipText("");
        Nombremembresia.setBorder(null);
        Nombremembresia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                NombremembresiaMousePressed(evt);
            }
        });
        Nombremembresia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombremembresiaActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 3, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Duracion :");

        duracioncampo.setBackground(new java.awt.Color(242, 242, 242));
        duracioncampo.setFont(new java.awt.Font("Yu Gothic UI", 3, 14)); // NOI18N
        duracioncampo.setForeground(new java.awt.Color(153, 153, 153));
        duracioncampo.setText(" Ingrese Duracion (en Dias)");
        duracioncampo.setToolTipText("");
        duracioncampo.setBorder(null);
        duracioncampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                duracioncampoMousePressed(evt);
            }
        });
        duracioncampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duracioncampoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 3, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Informacion :");

        informacioncampo.setBackground(new java.awt.Color(242, 242, 242));
        informacioncampo.setFont(new java.awt.Font("Yu Gothic UI", 3, 14)); // NOI18N
        informacioncampo.setForeground(new java.awt.Color(153, 153, 153));
        informacioncampo.setText(" Ingrese Informacion Membresia");
        informacioncampo.setToolTipText("");
        informacioncampo.setBorder(null);
        informacioncampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                informacioncampoMousePressed(evt);
            }
        });
        informacioncampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                informacioncampoActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 3, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Costo :");

        costocampo.setBackground(new java.awt.Color(242, 242, 242));
        costocampo.setFont(new java.awt.Font("Yu Gothic UI", 3, 14)); // NOI18N
        costocampo.setForeground(new java.awt.Color(153, 153, 153));
        costocampo.setText(" Ingrese Costo Membresia");
        costocampo.setToolTipText("");
        costocampo.setBorder(null);
        costocampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                costocampoMousePressed(evt);
            }
        });
        costocampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costocampoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 812, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(editarmembresia, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eliminarmembresia, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                            .addComponent(Agregarmembresia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 38, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Actualizartabla, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Nombremembresia, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(duracioncampo, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(informacioncampo, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(costocampo, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(38, 38, 38))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(Actualizartabla)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Nombremembresia)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(duracioncampo)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(informacioncampo)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(costocampo)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(Agregarmembresia, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(editarmembresia, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eliminarmembresia, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ActualizartablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizartablaActionPerformed
        // TODO add your handling code here:
        
        mostrarTabla("Membresia");
 Nombremembresia.setText(" Ingrese Nombre Membresia");
                costocampo.setText(" Ingrese Costo Membresia");
                duracioncampo.setText(" Ingrese Duracion (en Dias)");
                informacioncampo.setText(" Ingrese Informacion Membresia");
                
                 Nombremembresia.setForeground(Color.gray);
            costocampo.setForeground(Color.gray);
            duracioncampo.setForeground(Color.gray);
            informacioncampo.setForeground(Color.gray);
            
            id_membresia=0;
       
    }//GEN-LAST:event_ActualizartablaActionPerformed

    private void AgregarmembresiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarmembresiaActionPerformed
        // TODO add your handling code here:
       String sql = "INSERT INTO Membresia (nombre, duracion, informacion, costo) VALUES (?, ?, ?, ?)";
Connection con = Conexion.conectar();

try {
    // Validar que todos los campos estén llenos
    if (Nombremembresia.getText().trim().isEmpty() || Nombremembresia.getText().equals(" Ingrese Nombre Membresia")) {
        JOptionPane.showMessageDialog(null, "El campo Nombre es obligatorio.");
        return;
    }

    String duracionTexto = duracioncampo.getText();
    if (duracionTexto.trim().isEmpty() || duracionTexto.equals(" Ingrese Duracion (en Dias)")) {
        JOptionPane.showMessageDialog(null, "El campo Duración es obligatorio.");
        return;
    }

    if (informacioncampo.getText().trim().isEmpty() || informacioncampo.getText().equals(" Ingrese Informacion Membresia")) {
        JOptionPane.showMessageDialog(null, "El campo Información es obligatorio.");
        return;
    }

    String costotext = costocampo.getText();
    if (costotext.trim().isEmpty() || costotext.equals(" Ingrese Costo Membresia")) {
        JOptionPane.showMessageDialog(null, "El campo Costo es obligatorio.");
        return;
    }

    // Convertir duracion y costo después de haber validado que no estén vacíos
    int duracion = Integer.parseInt(duracionTexto);
    BigDecimal costo = new BigDecimal(costotext);

    PreparedStatement pt = con.prepareStatement(sql);
    pt.setString(1, Nombremembresia.getText());
    pt.setInt(2, duracion);
    pt.setString(3, informacioncampo.getText());
    pt.setBigDecimal(4, costo);

    int fila = pt.executeUpdate();

    if (fila > 0) {
        JOptionPane.showMessageDialog(null, "Membresía Creada Correctamente!");

        // Restablecer los campos de texto
        Nombremembresia.setText(" Ingrese Nombre Membresia");
        costocampo.setText(" Ingrese Costo Membresia");
        duracioncampo.setText(" Ingrese Duracion (en Dias)");
        informacioncampo.setText(" Ingrese Informacion Membresia");
        
        id_membresia=0;
        con.close();
    }

    // Cambiar el color del texto de los campos
    Nombremembresia.setForeground(Color.gray);
    costocampo.setForeground(Color.gray);
    duracioncampo.setForeground(Color.gray);
    informacioncampo.setForeground(Color.gray);

} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(null, "Error: Asegúrate de que los campos de duración y costo contengan números válidos.");
    System.out.println("Error: " + e);
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Error: " + e);
    System.out.println("Error: " + e);
}

    }//GEN-LAST:event_AgregarmembresiaActionPerformed

    private void editarmembresiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarmembresiaActionPerformed
        // TODO add your handling code here:
        
    String sql = "UPDATE Membresia SET nombre = ?, duracion = ?, informacion = ?, costo = ? WHERE id_membresia = ?";
    Connection con = Conexion.conectar();

    if (id_membresia > 0) {
        try {
             // Verificar que todos los campos estén llenos
            if (Nombremembresia.getText().trim().isEmpty() || Nombremembresia.getText().equals(" Ingrese Nombre Membresia")) {
                JOptionPane.showMessageDialog(null, "El campo Nombre es obligatorio.");
                return;
            }

            String duracionTexto = duracioncampo.getText();
            if (duracionTexto.trim().isEmpty() || duracionTexto.equals(" Ingrese Duracion (en Dias)")) {
                JOptionPane.showMessageDialog(null, "El campo Duración es obligatorio.");
                return;
            }

            if (informacioncampo.getText().trim().isEmpty() || informacioncampo.getText().equals(" Ingrese Informacion Membresia")) {
                JOptionPane.showMessageDialog(null, "El campo Información es obligatorio.");
                return;
            }

            String costotext = costocampo.getText();
            if (costotext.trim().isEmpty() || costotext.equals(" Ingrese Costo Membresia")) {
                JOptionPane.showMessageDialog(null, "El campo Costo es obligatorio.");
                return;
            }

          
            PreparedStatement pt = con.prepareStatement(sql);
            pt.setString(1, Nombremembresia.getText());

           
            int duracion = Integer.parseInt(duracionTexto);
            BigDecimal costo = new BigDecimal(costotext);

            pt.setInt(2, duracion);
            pt.setString(3, informacioncampo.getText());
            pt.setBigDecimal(4, costo);
            pt.setInt(5, id_membresia);

            int fila = pt.executeUpdate();

            if (fila > 0) {
                JOptionPane.showMessageDialog(null, "Membresía " + Nombremembresia.getText() + " Actualizada Correctamente!");

                // Restablecer los campos de texto
                Nombremembresia.setText(" Ingrese Nombre Membresia");
                costocampo.setText(" Ingrese Costo Membresia");
                duracioncampo.setText(" Ingrese Duracion (en Dias)");
                informacioncampo.setText(" Ingrese Informacion Membresia");
                
                id_membresia=0;
                con.close();
            }

            // Cambiar el color del texto de los campos
            Nombremembresia.setForeground(Color.gray);
            costocampo.setForeground(Color.gray);
            duracioncampo.setForeground(Color.gray);
            informacioncampo.setForeground(Color.gray);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error: Asegúrate de que los campos de duración y costo contengan números válidos.");
            System.out.println("Error: " + e);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e);
            System.out.println("Error: " + e);
        }
    } else {
        JOptionPane.showMessageDialog(null, "Membresía no encontrada, asegúrate de seleccionar la membresía que deseas actualizar!");
    }
    }//GEN-LAST:event_editarmembresiaActionPerformed

    private void eliminarmembresiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarmembresiaActionPerformed
        // TODO add your handling code here:
        
        String querydelete="DELETE FROM Membresia WHERE id_membresia = ?";
        
        Connection con = Conexion.conectar();
        if(id_membresia > 0){
        try {
             PreparedStatement pt = con.prepareStatement(querydelete);
             pt.setInt(1, id_membresia);
             int rs = pt.executeUpdate();
             if(rs > 0){
                 JOptionPane.showMessageDialog(null," Membresia Eliminada Correctamente");
                 
                  Nombremembresia.setText(" Ingrese Nombre Membresia");
                costocampo.setText(" Ingrese Costo Membresia");
                duracioncampo.setText(" Ingrese Duracion (en Dias)");
                informacioncampo.setText(" Ingrese Informacion Membresia");
                
                 Nombremembresia.setForeground(Color.gray);
            costocampo.setForeground(Color.gray);
            duracioncampo.setForeground(Color.gray);
            informacioncampo.setForeground(Color.gray);
            
            id_membresia=0;
            con.close();
             }
          
        } catch (Exception e) {
        }
        }else {
             JOptionPane.showMessageDialog(null, "Membresía no encontrada, asegúrate de seleccionar la membresía que deseas Eliminar!");
        }
        
    }//GEN-LAST:event_eliminarmembresiaActionPerformed

    private void NombremembresiaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NombremembresiaMousePressed
        // TODO add your handling code here:
        
        if (Nombremembresia.getText().equals(" Ingrese Nombre Membresia")) {
            Nombremembresia.setText("");
            Nombremembresia.setForeground(Color.black);
        }
        
        if(duracioncampo.getText().isEmpty()){
            duracioncampo.setText(" Ingrese Duracion (en Dias)");
            duracioncampo.setForeground(Color.gray);
        }
        if(informacioncampo.getText().isEmpty()){
            informacioncampo.setText(" Ingrese Informacion Membresia");
            informacioncampo.setForeground(Color.gray);
        }
        if(costocampo.getText().isEmpty()){
            costocampo.setText(" Ingrese Costo Membresia");
            costocampo.setForeground(Color.gray);
        }
    }//GEN-LAST:event_NombremembresiaMousePressed

    private void NombremembresiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombremembresiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NombremembresiaActionPerformed

    private void duracioncampoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_duracioncampoMousePressed
        // TODO add your handling code here:
         if (duracioncampo.getText().equals(" Ingrese Duracion (en Dias)")) {
            duracioncampo.setText("");
            duracioncampo.setForeground(Color.black);
        }
        
        if(Nombremembresia.getText().isEmpty()){
            Nombremembresia.setText(" Ingrese Nombre Membresia");
            Nombremembresia.setForeground(Color.gray);
        }
        if(informacioncampo.getText().isEmpty()){
            informacioncampo.setText(" Ingrese Informacion Membresia");
            informacioncampo.setForeground(Color.gray);
        }
        if(costocampo.getText().isEmpty()){
            costocampo.setText(" Ingrese Costo Membresia");
            costocampo.setForeground(Color.gray);
        }
    }//GEN-LAST:event_duracioncampoMousePressed

    private void duracioncampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duracioncampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_duracioncampoActionPerformed

    private void informacioncampoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_informacioncampoMousePressed
        // TODO add your handling code here:
         if (informacioncampo.getText().equals(" Ingrese Informacion Membresia")) {
            informacioncampo.setText("");
            informacioncampo.setForeground(Color.black);
        }
        
        if(Nombremembresia.getText().isEmpty()){
            Nombremembresia.setText(" Ingrese Nombre Membresia");
            Nombremembresia.setForeground(Color.gray);
        }
        if(duracioncampo.getText().isEmpty()){
            duracioncampo.setText(" Ingrese Duracion (en Dias)");
            duracioncampo.setForeground(Color.gray);
        }
        if(costocampo.getText().isEmpty()){
            costocampo.setText(" Ingrese Costo Membresia");
            costocampo.setForeground(Color.gray);
        }
        
    }//GEN-LAST:event_informacioncampoMousePressed

    private void informacioncampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_informacioncampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_informacioncampoActionPerformed

    private void costocampoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_costocampoMousePressed
        // TODO add your handling code here:
        if (costocampo.getText().equals(" Ingrese Costo Membresia")) {
            costocampo.setText("");
            costocampo.setForeground(Color.black);
        }
        
        if(Nombremembresia.getText().isEmpty()){
            Nombremembresia.setText(" Ingrese Nombre Membresia");
            Nombremembresia.setForeground(Color.gray);
        }
        if(duracioncampo.getText().isEmpty()){
            duracioncampo.setText(" Ingrese Duracion (en Dias)");
            duracioncampo.setForeground(Color.gray);
        }
        if(informacioncampo.getText().isEmpty()){
            informacioncampo.setText(" Ingrese Informacion Membresia");
            informacioncampo.setForeground(Color.gray);
        }
    }//GEN-LAST:event_costocampoMousePressed

    private void costocampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costocampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costocampoActionPerformed

    private void tablamembresiasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablamembresiasMouseClicked
        // TODO add your handling code here:
        
      
         
         int seleccion=tablamembresias.rowAtPoint(evt.getPoint());
         
        String IDTEXT= String.valueOf(tablamembresias.getValueAt(seleccion, 0));
        id_membresia = Integer.parseInt(IDTEXT);
        
         Nombremembresia.setText(String.valueOf(tablamembresias.getValueAt(seleccion, 1).toString()));
         duracioncampo.setText(String.valueOf(tablamembresias.getValueAt(seleccion, 2).toString()));
         informacioncampo.setText(String.valueOf(tablamembresias.getValueAt(seleccion, 3).toString()));
         costocampo.setText(String.valueOf(tablamembresias.getValueAt(seleccion, 4).toString()));
         
         Nombremembresia.setForeground(Color.black);
            costocampo.setForeground(Color.black);
                duracioncampo.setForeground(Color.black);
            informacioncampo.setForeground(Color.black);
        
        
    
    }//GEN-LAST:event_tablamembresiasMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Actualizartabla;
    private javax.swing.JButton Agregarmembresia;
    private javax.swing.JTextField Nombremembresia;
    private javax.swing.JTextField costocampo;
    private javax.swing.JTextField duracioncampo;
    private javax.swing.JButton editarmembresia;
    private javax.swing.JButton eliminarmembresia;
    private javax.swing.JTextField informacioncampo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablamembresias;
    // End of variables declaration//GEN-END:variables
}
